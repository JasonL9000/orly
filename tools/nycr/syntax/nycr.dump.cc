/* <tools/nycr/syntax/nycr.dump.cc>

   This file was generated by nycr. */

#include <cstdio>
#include <iostream>
#include <unistd.h>

#include <base/thrower.h>
#include <tools/nycr/syntax/nycr.cst.h>

using namespace std;

int main(int argc, char *argv[]) {
  int result;
  try {
    for (;;) {
      int opt = getopt(argc, argv, "");
      if (opt < 0) {
        break;
      }
      THROW << "unknown option '" << optopt << '\'';
    }
    if (optind == argc) {
      THROW << "no compiland";
    }
    if (optind < argc - 1) {
      THROW << "multiple compilands not allowed";
    }
    auto ctx = Tools::Nycr::Syntax::TNycr::ParseFile(argv[optind]);
    if (!ctx.HasErrors()) {
      assert(ctx.Get());
      ctx.Get()->Write(cout, 0, 0);
      result = EXIT_SUCCESS;
    } else {
      ctx.ForEachError([] (const Tools::Nycr::TPosRange &pos, const string &msg) {
        cerr << pos << ' ' << msg << endl;
        return true;
      });
      result = EXIT_FAILURE;
    }
  } catch (const exception &ex) {
    cerr << "exception: " << ex.what() << endl;
    result = EXIT_FAILURE;
  }
  return result;
}
